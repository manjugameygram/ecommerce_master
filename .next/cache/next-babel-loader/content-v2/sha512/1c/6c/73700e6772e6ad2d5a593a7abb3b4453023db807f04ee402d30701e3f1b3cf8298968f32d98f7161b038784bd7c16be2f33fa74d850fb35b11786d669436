{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/rajeshthakur/Desktop/Files/Work/GameyGram/Projects/reactecommerce/components/Common/NetflixSlider/Slider.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { useState } from 'react';\nimport cx from 'classnames';\nimport SliderContext from './context';\nimport Content from './Content';\nimport SlideButton from './SlideButton';\nimport SliderWrapper from './SliderWrapper';\nimport useSliding from './useSliding';\nimport useSizeElement from './useSizeElement';\n\nconst NetFlixSlider = ({\n  children,\n  activeSlide\n}) => {\n  const {\n    0: currentSlide,\n    1: setCurrentSlide\n  } = useState(activeSlide);\n  const {\n    width,\n    elementRef\n  } = useSizeElement();\n  const {\n    handlePrev,\n    handleNext,\n    slideProps,\n    containerRef,\n    hasNext,\n    hasPrev\n  } = useSliding(width, React.Children.count(children));\n\n  const handleSelect = movie => {\n    setCurrentSlide(movie);\n  };\n\n  const handleClose = () => {\n    setCurrentSlide(null);\n  };\n\n  const contextValue = {\n    onSelectSlide: handleSelect,\n    onCloseSlide: handleClose,\n    elementRef,\n    currentSlide\n  };\n  return /*#__PURE__*/_jsxDEV(SliderContext.Provider, {\n    value: contextValue,\n    children: [/*#__PURE__*/_jsxDEV(SliderWrapper, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: cx('slider', {\n          'slider--open': currentSlide != null\n        }),\n        children: /*#__PURE__*/_jsxDEV(\"div\", _objectSpread(_objectSpread({\n          ref: containerRef,\n          className: \"slider__container\"\n        }, slideProps), {}, {\n          children: children\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), hasPrev && /*#__PURE__*/_jsxDEV(SlideButton, {\n        onClick: handlePrev,\n        type: \"prev\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 21\n      }, this), hasNext && /*#__PURE__*/_jsxDEV(SlideButton, {\n        onClick: handleNext,\n        type: \"next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), currentSlide && /*#__PURE__*/_jsxDEV(Content, {\n      movie: currentSlide,\n      onClose: handleClose\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 24\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\nexport default NetFlixSlider;","map":{"version":3,"sources":["/Users/rajeshthakur/Desktop/Files/Work/GameyGram/Projects/reactecommerce/components/Common/NetflixSlider/Slider.js"],"names":["React","useState","cx","SliderContext","Content","SlideButton","SliderWrapper","useSliding","useSizeElement","NetFlixSlider","children","activeSlide","currentSlide","setCurrentSlide","width","elementRef","handlePrev","handleNext","slideProps","containerRef","hasNext","hasPrev","Children","count","handleSelect","movie","handleClose","contextValue","onSelectSlide","onCloseSlide"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,EAAP,MAAe,YAAf;AACA,OAAOC,aAAP,MAA0B,WAA1B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;;AAEA,MAAMC,aAAa,GAAG,CAAC;AAAEC,EAAAA,QAAF;AAAYC,EAAAA;AAAZ,CAAD,KAA+B;AACnD,QAAM;AAAA,OAACC,YAAD;AAAA,OAAeC;AAAf,MAAkCZ,QAAQ,CAACU,WAAD,CAAhD;AACA,QAAM;AAAEG,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAwBP,cAAc,EAA5C;AACA,QAAM;AACJQ,IAAAA,UADI;AAEJC,IAAAA,UAFI;AAGJC,IAAAA,UAHI;AAIJC,IAAAA,YAJI;AAKJC,IAAAA,OALI;AAMJC,IAAAA;AANI,MAOFd,UAAU,CAACO,KAAD,EAAQd,KAAK,CAACsB,QAAN,CAAeC,KAAf,CAAqBb,QAArB,CAAR,CAPd;;AASA,QAAMc,YAAY,GAAGC,KAAK,IAAI;AAC5BZ,IAAAA,eAAe,CAACY,KAAD,CAAf;AACD,GAFD;;AAIA,QAAMC,WAAW,GAAG,MAAM;AACxBb,IAAAA,eAAe,CAAC,IAAD,CAAf;AACD,GAFD;;AAIA,QAAMc,YAAY,GAAG;AACnBC,IAAAA,aAAa,EAAEJ,YADI;AAEnBK,IAAAA,YAAY,EAAEH,WAFK;AAGnBX,IAAAA,UAHmB;AAInBH,IAAAA;AAJmB,GAArB;AAOA,sBACE,QAAC,aAAD,CAAe,QAAf;AAAwB,IAAA,KAAK,EAAEe,YAA/B;AAAA,4BACE,QAAC,aAAD;AAAA,8BACE;AACE,QAAA,SAAS,EAAEzB,EAAE,CAAC,QAAD,EAAW;AAAE,0BAAgBU,YAAY,IAAI;AAAlC,SAAX,CADf;AAAA,+BAGE;AAAK,UAAA,GAAG,EAAEO,YAAV;AAAwB,UAAA,SAAS,EAAC;AAAlC,WAA0DD,UAA1D;AAAA,oBAAuER;AAAvE;AAAA;AAAA;AAAA;AAAA;AAHF;AAAA;AAAA;AAAA;AAAA,cADF,EAMGW,OAAO,iBAAI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEL,UAAtB;AAAkC,QAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cANd,EAOGI,OAAO,iBAAI,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEH,UAAtB;AAAkC,QAAA,IAAI,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,cAPd;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAUGL,YAAY,iBAAI,QAAC,OAAD;AAAS,MAAA,KAAK,EAAEA,YAAhB;AAA8B,MAAA,OAAO,EAAEc;AAAvC;AAAA;AAAA;AAAA;AAAA,YAVnB;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAcD,CAzCD;;AA2CA,eAAejB,aAAf","sourcesContent":["import React, { useState } from 'react';\nimport cx from 'classnames';\nimport SliderContext from './context';\nimport Content from './Content';\nimport SlideButton from './SlideButton';\nimport SliderWrapper from './SliderWrapper';\nimport useSliding from './useSliding';\nimport useSizeElement from './useSizeElement';\n\nconst NetFlixSlider = ({ children, activeSlide }) => {\n  const [currentSlide, setCurrentSlide] = useState(activeSlide);\n  const { width, elementRef } = useSizeElement();\n  const {\n    handlePrev,\n    handleNext,\n    slideProps,\n    containerRef,\n    hasNext,\n    hasPrev\n  } = useSliding(width, React.Children.count(children));\n\n  const handleSelect = movie => {\n    setCurrentSlide(movie);\n  };\n\n  const handleClose = () => {\n    setCurrentSlide(null);\n  };\n\n  const contextValue = {\n    onSelectSlide: handleSelect,\n    onCloseSlide: handleClose,\n    elementRef,\n    currentSlide,\n  };\n\n  return (\n    <SliderContext.Provider value={contextValue}>\n      <SliderWrapper>\n        <div\n          className={cx('slider', { 'slider--open': currentSlide != null })}\n        >\n          <div ref={containerRef} className=\"slider__container\" {...slideProps}>{children}</div>\n        </div>\n        {hasPrev && <SlideButton onClick={handlePrev} type=\"prev\" />}\n        {hasNext && <SlideButton onClick={handleNext} type=\"next\" />}\n      </SliderWrapper>\n      {currentSlide && <Content movie={currentSlide} onClose={handleClose} />}\n    </SliderContext.Provider>\n  );\n};\n\nexport default NetFlixSlider;\n"]},"metadata":{},"sourceType":"module"}