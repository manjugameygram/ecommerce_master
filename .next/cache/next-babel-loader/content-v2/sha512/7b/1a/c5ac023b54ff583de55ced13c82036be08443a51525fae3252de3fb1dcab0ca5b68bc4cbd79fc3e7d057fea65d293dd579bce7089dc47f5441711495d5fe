{"ast":null,"code":"import { API_URL, USER_AUTH } from \"./../../config/actionTypes\";\nimport axios from 'axios';\nimport Cookies from 'js-cookie';\n\nconst CryptoJS = require(\"crypto-js\");\n\nexport const userLogin = data => {\n  return dispatch => {\n    dispatch({\n      type: USER_AUTH.SIGNIN_REQUEST\n    });\n    const INSTANCE = axios.create({\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let inputJSON = JSON.stringify(data);\n    INSTANCE.post(API_URL + \"admin-auth/login\", inputJSON).then(function (response) {\n      if (response.data.messageId === 200) {\n        let result = {\n          data: {\n            user: response.data.user,\n            token: response.data.token\n          },\n          message: response.data.message\n        }; // Encrypt\n\n        const ciphertext = CryptoJS.AES.encrypt(JSON.stringify(result.data), 'GFYUFGTYGFTYTY64564545acvbvrttyFG@%#%#%#%#TTRR').toString(); // _tok_u = JWT Token & user details\n\n        Cookies.set('_tok_u', ciphertext, {\n          expires: 7\n        });\n        dispatch(userSignInSuccess(result));\n      } else {\n        dispatch(userSignInFail(response.data));\n      }\n    }).catch(function (error) {\n      dispatch(userSignInFail(error.message));\n    });\n  };\n};\n\nconst userSignInSuccess = data => ({\n  type: USER_AUTH.SIGNIN_REQUEST_SUCCESS,\n  payload: data\n});\n\nconst userSignInFail = errorMessage => ({\n  type: USER_AUTH.SIGNIN_REQUEST_FAIL,\n  payload: errorMessage\n});\n\nexport const userSignUp = data => {\n  return dispatch => {\n    dispatch({\n      type: USER_AUTH.SIGNUP_REQUEST\n    });\n    const INSTANCE = axios.create({\n      headers: {\n        'Content-Type': 'application/json'\n      }\n    });\n    let inputJSON = JSON.stringify(data);\n    INSTANCE.post(API_URL + \"admin-auth/signup\", inputJSON).then(function (response) {\n      if (response.data.messageId === 200) {\n        dispatch(userSignUpSuccess(response.data));\n      } else {\n        dispatch(userSignUpFail(response.data));\n      }\n    }).catch(function (error) {\n      dispatch(userSignUpFail(error.message));\n    });\n  };\n};\n\nconst userSignUpSuccess = data => ({\n  type: USER_AUTH.SIGNUP_REQUEST_SUCCESS,\n  payload: data\n});\n\nconst userSignUpFail = errorMessage => ({\n  type: USER_AUTH.SIGNUP_REQUEST_FAIL,\n  payload: errorMessage\n});\n\nexport const logOutUser = () => {\n  Cookies.remove('_tok_u');\n  return dispatch => {\n    dispatch({\n      type: USER_AUTH.SIGNOUT_USER\n    });\n  };\n};\nexport const setInitUrl = url => {\n  return {\n    type: INIT_URL,\n    payload: url\n  };\n};\nexport const resetUserAuth = () => {\n  return dispatch => {\n    dispatch({\n      type: USER_AUTH.RESET_AUTH\n    });\n  };\n};\nexport const addSkill = (token, data) => {\n  return dispatch => {\n    dispatch({\n      type: USER_AUTH.ADD_SKILL_REQUEST\n    });\n    const AuthStr = 'Bearer '.concat(token);\n    const INSTANCE = axios.create({\n      headers: {\n        'Content-Type': 'application/json',\n        'Authorization': AuthStr\n      }\n    });\n    let inputJSON = JSON.stringify(data);\n    INSTANCE.post(API_URL + \"admin-auth/add-skill\", inputJSON).then(function (response) {\n      dispatch(addSkillSuccess(response.data));\n    }).catch(function (error) {\n      dispatch(addSkillError(error.message));\n    });\n  };\n};\n\nconst addSkillSuccess = data => ({\n  type: USER_AUTH.ADD_SKILL_SUCCESS,\n  payload: data\n});\n\nconst addSkillError = errorMessage => ({\n  type: USER_AUTH.ADD_SKILL_FAIL,\n  payload: errorMessage\n});","map":{"version":3,"sources":["/Users/rajeshthakur/Desktop/Files/Work/GameyGram/Projects/reactecommerce/redux/actions/auth.js"],"names":["API_URL","USER_AUTH","axios","Cookies","CryptoJS","require","userLogin","data","dispatch","type","SIGNIN_REQUEST","INSTANCE","create","headers","inputJSON","JSON","stringify","post","then","response","messageId","result","user","token","message","ciphertext","AES","encrypt","toString","set","expires","userSignInSuccess","userSignInFail","catch","error","SIGNIN_REQUEST_SUCCESS","payload","errorMessage","SIGNIN_REQUEST_FAIL","userSignUp","SIGNUP_REQUEST","userSignUpSuccess","userSignUpFail","SIGNUP_REQUEST_SUCCESS","SIGNUP_REQUEST_FAIL","logOutUser","remove","SIGNOUT_USER","setInitUrl","url","INIT_URL","resetUserAuth","RESET_AUTH","addSkill","ADD_SKILL_REQUEST","AuthStr","concat","addSkillSuccess","addSkillError","ADD_SKILL_SUCCESS","ADD_SKILL_FAIL"],"mappings":"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","sourcesContent":["import {\r\n  API_URL,\r\n  USER_AUTH\r\n} from \"./../../config/actionTypes\";\r\n\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie';\r\nconst CryptoJS = require(\"crypto-js\");\r\n\r\nexport const userLogin = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: USER_AUTH.SIGNIN_REQUEST });\r\n    const INSTANCE = axios.create({\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    let inputJSON = JSON.stringify(data);\r\n      \r\n    INSTANCE.post(API_URL + \"admin-auth/login\", inputJSON)\r\n      .then(function (response) {\r\n        if(response.data.messageId === 200){\r\n          let result = {\r\n            data: {\r\n              user: response.data.user,\r\n              token: response.data.token\r\n            },\r\n            message: response.data.message\r\n          }\r\n          // Encrypt\r\n          const ciphertext = CryptoJS.AES.encrypt(JSON.stringify(result.data), 'GFYUFGTYGFTYTY64564545acvbvrttyFG@%#%#%#%#TTRR').toString();\r\n          // _tok_u = JWT Token & user details\r\n          Cookies.set('_tok_u', ciphertext, { expires: 7 });\r\n          dispatch(userSignInSuccess(result));\r\n        } else {\r\n          dispatch(userSignInFail(response.data));\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        dispatch(userSignInFail(error.message));\r\n      });\r\n  };\r\n};\r\n\r\nconst userSignInSuccess = (data) => ({\r\n  type: USER_AUTH.SIGNIN_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nconst userSignInFail = errorMessage => ({\r\n  type: USER_AUTH.SIGNIN_REQUEST_FAIL,\r\n  payload: errorMessage\r\n});\r\n\r\nexport const userSignUp = (data) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: USER_AUTH.SIGNUP_REQUEST });\r\n    const INSTANCE = axios.create({\r\n      headers: {\r\n        'Content-Type': 'application/json'\r\n      }\r\n    });\r\n\r\n    let inputJSON = JSON.stringify(data);\r\n      \r\n    INSTANCE.post(API_URL + \"admin-auth/signup\", inputJSON)\r\n      .then(function (response) {\r\n        if(response.data.messageId === 200){\r\n          dispatch(userSignUpSuccess(response.data));\r\n        } else {\r\n          dispatch(userSignUpFail(response.data));\r\n        }\r\n      })\r\n      .catch(function (error) {\r\n        dispatch(userSignUpFail(error.message));\r\n      });\r\n  };\r\n};\r\n\r\nconst userSignUpSuccess = (data) => ({\r\n  type: USER_AUTH.SIGNUP_REQUEST_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nconst userSignUpFail = errorMessage => ({\r\n  type: USER_AUTH.SIGNUP_REQUEST_FAIL,\r\n  payload: errorMessage\r\n});\r\n\r\nexport const logOutUser = () => {\r\n  Cookies.remove('_tok_u');\r\n  return (dispatch) => {\r\n    dispatch({ type: USER_AUTH.SIGNOUT_USER});\r\n  }\r\n};\r\n\r\nexport const setInitUrl = (url) => {\r\n  return {\r\n    type: INIT_URL,\r\n    payload: url\r\n  };\r\n};\r\n\r\nexport const resetUserAuth = () => {\r\n  return (dispatch) => {\r\n    dispatch({ type: USER_AUTH.RESET_AUTH})\r\n  }\r\n}\r\n\r\nexport const addSkill = (token, data) => {\r\n  return (dispatch) => {\r\n    dispatch({ type: USER_AUTH.ADD_SKILL_REQUEST });\r\n    const AuthStr = 'Bearer '.concat(token);\r\n    const INSTANCE = axios.create({\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n        'Authorization': AuthStr\r\n      }\r\n    });\r\n\r\n    let inputJSON = JSON.stringify(data);\r\n\r\n    INSTANCE.post(API_URL + \"admin-auth/add-skill\", inputJSON)\r\n      .then(function (response) {\r\n        dispatch(addSkillSuccess(response.data));\r\n      })\r\n      .catch(function (error) {\r\n        dispatch(addSkillError(error.message));\r\n      });\r\n  };\r\n};\r\n\r\nconst addSkillSuccess = (data) => ({\r\n  type: USER_AUTH.ADD_SKILL_SUCCESS,\r\n  payload: data\r\n});\r\n\r\nconst addSkillError = errorMessage => ({\r\n  type: USER_AUTH.ADD_SKILL_FAIL,\r\n  payload: errorMessage\r\n});\r\n"]},"metadata":{},"sourceType":"module"}