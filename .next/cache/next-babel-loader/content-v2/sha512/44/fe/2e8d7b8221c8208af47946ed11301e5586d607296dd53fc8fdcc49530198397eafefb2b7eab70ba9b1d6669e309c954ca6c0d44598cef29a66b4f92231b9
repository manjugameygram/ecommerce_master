{"ast":null,"code":"import _toConsumableArray from \"/Users/rajeshthakur/Desktop/Files/Work/GameyGram/Projects/reactecommerce/node_modules/next/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"/Users/rajeshthakur/Desktop/Files/Work/GameyGram/Projects/reactecommerce/node_modules/next/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _s = $RefreshSig$();\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport { useMemo } from 'react';\nimport { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunkMiddleware from 'redux-thunk';\nvar store;\nimport { ADD_TO_CART, REMOVE_ITEM, SUB_QUANTITY, ADD_QUANTITY, ADD_SHIPPING, ADD_QUANTITY_WITH_NUMBER, RESET_CART, ADD_TO_COMPARE, REMOVE_ITEM_FROM_COMPARE } from '../actions/action-types/action-names';\nvar initialState = {\n  products: [],\n  addedItems: [],\n  addedItemsToCompare: [],\n  total: 0,\n  shipping: 0\n};\n\nvar reducers = function reducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  if (action.type === ADD_TO_CART) {\n    var addedItem = state.products.find(function (item) {\n      return item.id === action.id;\n    }); //check if the action id exists in the addedItems\n\n    var existed_item = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n\n    if (existed_item) {\n      addedItem.quantity += 1;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + addedItem.price\n      });\n    } else {\n      addedItem.quantity = 1; //calculating the total\n\n      var newTotal = state.total + addedItem.price;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [].concat(_toConsumableArray(state.addedItems), [addedItem]),\n        total: newTotal\n      });\n    }\n  }\n\n  if (action.type === ADD_TO_COMPARE) {\n    var addedItemToCompare = state.products.find(function (item) {\n      return item.id === action.id;\n    });\n    addedItemToCompare.quantity = 1;\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItemsToCompare: [].concat(_toConsumableArray(state.addedItemsToCompare), [addedItemToCompare])\n    });\n  }\n\n  if (action.type === ADD_QUANTITY_WITH_NUMBER) {\n    var _addedItem = state.products.find(function (item) {\n      return item.id === action.id;\n    }); //check if the action id exists in the addedItems\n\n\n    var _existed_item = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n\n    if (_existed_item) {\n      _addedItem.quantity += action.qty;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: state.total + _addedItem.price * action.qty\n      });\n    } else {\n      _addedItem.quantity = action.qty; //calculating the total\n\n      var _newTotal = state.total + _addedItem.price * action.qty;\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: [].concat(_toConsumableArray(state.addedItems), [_addedItem]),\n        total: _newTotal\n      });\n    }\n  }\n\n  if (action.type === REMOVE_ITEM) {\n    var itemToRemove = state.addedItems.find(function (item) {\n      return action.id === item.id;\n    });\n    var new_items = state.addedItems.filter(function (item) {\n      return action.id !== item.id;\n    }); //calculating the total\n\n    var _newTotal2 = state.total - itemToRemove.price * itemToRemove.quantity;\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: new_items,\n      total: _newTotal2\n    });\n  }\n\n  if (action.type === REMOVE_ITEM_FROM_COMPARE) {\n    var _new_items = state.addedItemsToCompare.filter(function (item) {\n      return action.id !== item.id;\n    });\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItemsToCompare: _new_items\n    });\n  }\n\n  if (action.type === ADD_QUANTITY) {\n    var _addedItem2 = state.products.find(function (item) {\n      return item.id === action.id;\n    });\n\n    _addedItem2.quantity += 1;\n\n    var _newTotal3 = state.total + _addedItem2.price;\n\n    return _objectSpread(_objectSpread({}, state), {}, {\n      total: _newTotal3\n    });\n  }\n\n  if (action.type === SUB_QUANTITY) {\n    var _addedItem3 = state.products.find(function (item) {\n      return item.id === action.id;\n    }); //if the qt == 0 then it should be removed\n\n\n    if (_addedItem3.quantity === 1) {\n      var _new_items2 = state.addedItems.filter(function (item) {\n        return item.id !== action.id;\n      });\n\n      var _newTotal4 = state.total - _addedItem3.price;\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        addedItems: _new_items2,\n        total: _newTotal4\n      });\n    } else {\n      _addedItem3.quantity -= 1;\n\n      var _newTotal5 = state.total - _addedItem3.price;\n\n      return _objectSpread(_objectSpread({}, state), {}, {\n        total: _newTotal5\n      });\n    }\n  }\n\n  if (action.type === ADD_SHIPPING) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping += 6\n    });\n  }\n\n  if (action.type === 'SUB_SHIPPING') {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      shipping: state.shipping -= 6\n    });\n  }\n\n  if (action.type === RESET_CART) {\n    return _objectSpread(_objectSpread({}, state), {}, {\n      addedItems: [],\n      total: 0,\n      shipping: 0\n    });\n  } else {\n    return state;\n  }\n};\n\nvar initStore = function initStore() {\n  var preloadedState = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  return createStore(reducers, preloadedState, composeWithDevTools(applyMiddleware(thunkMiddleware)));\n};\n\nexport var initializeStore = function initializeStore(preloadedState) {\n  var _store2;\n\n  var _store = (_store2 = store) !== null && _store2 !== void 0 ? _store2 : initStore(preloadedState); // After navigating to a page with an initial Redux state, merge that state\n  // with the current state in the store, and create a new store\n\n\n  if (preloadedState && store) {\n    _store = initStore(_objectSpread(_objectSpread({}, store.getState()), preloadedState)); // Reset the current store\n\n    store = undefined;\n  } // For SSG and SSR always create a new store\n\n\n  if (false) return _store; // Create the store once in the client\n\n  if (!store) store = _store;\n  return _store;\n};\nexport var useStore = function useStore(initialState) {\n  _s();\n\n  var store = useMemo(function () {\n    return initializeStore(initialState);\n  }, [initialState]);\n  return store;\n};\n\n_s(useStore, \"K8ucUnUnAgJZGJWAL9Ze8IHCmoQ=\");","map":{"version":3,"sources":["/Users/rajeshthakur/Desktop/Files/Work/GameyGram/Projects/reactecommerce/store/reducers/reducers.js"],"names":["useMemo","createStore","applyMiddleware","composeWithDevTools","thunkMiddleware","store","ADD_TO_CART","REMOVE_ITEM","SUB_QUANTITY","ADD_QUANTITY","ADD_SHIPPING","ADD_QUANTITY_WITH_NUMBER","RESET_CART","ADD_TO_COMPARE","REMOVE_ITEM_FROM_COMPARE","initialState","products","addedItems","addedItemsToCompare","total","shipping","reducers","state","action","type","addedItem","find","item","id","existed_item","quantity","price","newTotal","addedItemToCompare","qty","itemToRemove","new_items","filter","initStore","preloadedState","initializeStore","_store","getState","undefined","useStore"],"mappings":"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","sourcesContent":["import { useMemo } from 'react';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport { composeWithDevTools } from 'redux-devtools-extension';\r\nimport thunkMiddleware from 'redux-thunk';\r\n\r\nlet store;\r\n\r\nimport { \r\n    ADD_TO_CART,\r\n    REMOVE_ITEM,\r\n    SUB_QUANTITY,\r\n    ADD_QUANTITY, \r\n    ADD_SHIPPING,\r\n    ADD_QUANTITY_WITH_NUMBER,\r\n    RESET_CART,\r\n    ADD_TO_COMPARE,\r\n    REMOVE_ITEM_FROM_COMPARE\r\n} from '../actions/action-types/action-names'\r\n\r\nconst initialState = {\r\n    products: [],\r\n    addedItems:[],\r\n    addedItemsToCompare:[],\r\n    total: 0,\r\n    shipping: 0\r\n}\r\n\r\nconst reducers = (state = initialState, action) => {\r\n   \r\n    if(action.type === ADD_TO_CART){\r\n        let addedItem = state.products.find(item => item.id === action.id);\r\n        //check if the action id exists in the addedItems\r\n        let existed_item = state.addedItems.find(item => action.id === item.id)\r\n        if(existed_item){\r\n            addedItem.quantity += 1 \r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.price \r\n            }\r\n        } else {\r\n            addedItem.quantity = 1;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price \r\n            \r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    if(action.type === ADD_TO_COMPARE){\r\n        let addedItemToCompare = state.products.find(item => item.id === action.id);\r\n        \r\n        addedItemToCompare.quantity = 1;\r\n        \r\n        return {\r\n            ...state,\r\n            addedItemsToCompare: [...state.addedItemsToCompare, addedItemToCompare]\r\n        }\r\n    }\r\n\r\n    if(action.type === ADD_QUANTITY_WITH_NUMBER){\r\n        let addedItem = state.products.find(item => item.id === action.id)\r\n        //check if the action id exists in the addedItems\r\n        let existed_item = state.addedItems.find(item=> action.id === item.id)\r\n        if(existed_item)\r\n        {\r\n            addedItem.quantity += action.qty\r\n            return {\r\n                ...state,\r\n                total: state.total + addedItem.price * action.qty\r\n            }\r\n        } else {\r\n            addedItem.quantity = action.qty;\r\n            //calculating the total\r\n            let newTotal = state.total + addedItem.price * action.qty\r\n            \r\n            return {\r\n                ...state,\r\n                addedItems: [...state.addedItems, addedItem],\r\n                total : newTotal\r\n            }\r\n            \r\n        }\r\n    }\r\n\r\n    if(action.type === REMOVE_ITEM){\r\n        let itemToRemove = state.addedItems.find(item=> action.id === item.id)\r\n        let new_items = state.addedItems.filter(item=> action.id !== item.id)\r\n        \r\n        //calculating the total\r\n        let newTotal = state.total - (itemToRemove.price * itemToRemove.quantity );\r\n\r\n        return {\r\n            ...state,\r\n            addedItems: new_items,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if(action.type === REMOVE_ITEM_FROM_COMPARE){\r\n        let new_items = state.addedItemsToCompare.filter(item=> action.id !== item.id)\r\n        \r\n        return {\r\n            ...state,\r\n            addedItemsToCompare: new_items\r\n        }\r\n    }\r\n\r\n    if(action.type === ADD_QUANTITY){\r\n        let addedItem = state.products.find(item=> item.id === action.id)\r\n        addedItem.quantity += 1 \r\n        let newTotal = state.total + addedItem.price\r\n        return {\r\n            ...state,\r\n            total: newTotal\r\n        }\r\n    }\r\n\r\n    if(action.type === SUB_QUANTITY){  \r\n        let addedItem = state.products.find(item=> item.id === action.id) \r\n        //if the qt == 0 then it should be removed\r\n        if(addedItem.quantity === 1){\r\n            let new_items = state.addedItems.filter(item=>item.id !== action.id)\r\n            let newTotal = state.total - addedItem.price\r\n            return {\r\n                ...state,\r\n                addedItems: new_items,\r\n                total: newTotal\r\n            }\r\n        } else {\r\n            addedItem.quantity -= 1\r\n            let newTotal = state.total - addedItem.price\r\n            return {\r\n                ...state,\r\n                total: newTotal\r\n            }\r\n        }\r\n        \r\n    }\r\n\r\n    if(action.type === ADD_SHIPPING){\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping += 6\r\n        }\r\n    }\r\n\r\n    if(action.type === 'SUB_SHIPPING'){\r\n        return {\r\n            ...state,\r\n            shipping: state.shipping -= 6\r\n        }\r\n    }\r\n\r\n    if(action.type === RESET_CART){\r\n        return {\r\n            ...state,\r\n            addedItems: [],\r\n            total: 0,\r\n            shipping: 0\r\n        }\r\n    }\r\n    \r\n    else {\r\n        return state\r\n    }\r\n}\r\n\r\nconst initStore = (preloadedState = initialState) => {\r\n    return createStore(\r\n        reducers,\r\n        preloadedState,\r\n        composeWithDevTools(applyMiddleware(thunkMiddleware))\r\n    )\r\n}\r\n\r\nexport const initializeStore = (preloadedState) => {\r\n    let _store = store ?? initStore(preloadedState)\r\n  \r\n    // After navigating to a page with an initial Redux state, merge that state\r\n    // with the current state in the store, and create a new store\r\n    if (preloadedState && store) {\r\n        _store = initStore({\r\n            ...store.getState(),\r\n            ...preloadedState,\r\n        })\r\n        // Reset the current store\r\n        store = undefined\r\n    }\r\n  \r\n    // For SSG and SSR always create a new store\r\n    if (typeof window === 'undefined') return _store\r\n    // Create the store once in the client\r\n    if (!store) store = _store\r\n  \r\n    return _store\r\n}\r\n\r\nexport const useStore = (initialState) => {\r\n    const store = useMemo(() => initializeStore(initialState), [initialState])\r\n    return store\r\n}\r\n  "]},"metadata":{},"sourceType":"module"}