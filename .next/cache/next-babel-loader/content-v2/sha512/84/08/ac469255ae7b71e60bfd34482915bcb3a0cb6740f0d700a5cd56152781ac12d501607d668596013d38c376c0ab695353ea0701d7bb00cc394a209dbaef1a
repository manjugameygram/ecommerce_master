{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"D:\\\\Gamegram\\\\ecommerce-master\\\\pages\\\\forgot-password.js\";\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from 'react';\nimport Link from 'next/link';\nimport { notification } from \"antd\";\nimport { Form, Col } from 'react-bootstrap';\nimport { connect } from 'react-redux';\nimport { bindActionCreators } from 'redux';\nimport { Formik } from 'formik';\nimport * as Yup from 'yup';\nimport Navbar from '../components/Layout/Navbar';\nimport Footer from '../components/Layout/Footer';\nimport Breadcrumb from '../components/Common/Breadcrumb';\nimport { userLogin, resetUserAuth } from \"./../redux/actions/auth\";\nconst ForgotpasswordSchema = Yup.object().shape({\n  email: Yup.string().required('Enter your email or mobile phone number.')\n});\n\nclass Forgotpassword extends Component {\n  constructor(props) {\n    super(props);\n\n    _defineProperty(this, \"onFinish\", values => {\n      this.props.userLogin(values);\n    });\n\n    this.state = {};\n  }\n\n  static getDerivedStateFromProps(nextProps, state) {\n    if (nextProps.auth) {\n      if (nextProps.auth.messageId === 200) {\n        notification['success']({\n          message: 'Success',\n          description: nextProps.auth.alertMessage\n        });\n        nextProps.resetUserAuth();\n      } else if (nextProps.auth.messageId === 203) {\n        notification['error']({\n          message: 'There was a problem!',\n          description: nextProps.auth.alertMessage\n        });\n        nextProps.resetUserAuth();\n      }\n\n      return true;\n    }\n\n    return null;\n  }\n\n  render() {\n    console.log(\"Forgotpassword\", this.props);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Breadcrumb, {\n        title: \"Forgotpassword\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"section\", {\n        className: \"signup-area ptb-60\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"signup-content\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"section-title\",\n              children: /*#__PURE__*/_jsxDEV(\"h2\", {\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"dot\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 33\n                }, this), \" Forgotpassword\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 29\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(Formik, {\n              validationSchema: ForgotpasswordSchema,\n              onSubmit: values => {\n                this.onFinish(values);\n              },\n              enableReinitialize: true,\n              initialValues: {\n                email: ''\n              },\n              children: ({\n                handleSubmit,\n                handleChange,\n                values,\n                touched,\n                errors\n              }) => /*#__PURE__*/_jsxDEV(Form, {\n                noValidate: true,\n                onSubmit: handleSubmit,\n                className: \"login-form\",\n                children: /*#__PURE__*/_jsxDEV(Form.Row, {\n                  children: /*#__PURE__*/_jsxDEV(Col, {\n                    children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                      children: \"Email or Mobile phone number\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 57\n                    }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                      type: \"text\",\n                      required: true,\n                      name: \"email\",\n                      value: values.email,\n                      onChange: handleChange,\n                      isInvalid: !!errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 57\n                    }, this), errors.email && touched.email ? /*#__PURE__*/_jsxDEV(Form.Control.Feedback, {\n                      type: \"invalid\",\n                      children: errors.email\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 101,\n                      columnNumber: 61\n                    }, this) : null, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 103,\n                      columnNumber: 53\n                    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                      type: \"submit\",\n                      className: \"btn btn-primary\",\n                      children: \"Forgotpassword\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 104,\n                      columnNumber: 34\n                    }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 34\n                    }, this), /*#__PURE__*/_jsxDEV(Link, {\n                      href: \"/ change-password\",\n                      children: /*#__PURE__*/_jsxDEV(\"a\", {\n                        className: \"reset-paasword\",\n                        children: \"Reset password\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 107,\n                        columnNumber: 40\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 40\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 90,\n                    columnNumber: 53\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 89,\n                  columnNumber: 49\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 45\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true);\n  }\n\n}\n\nfunction mapStateToProps(state) {\n  return {\n    auth: state.auth\n  };\n}\n\nfunction mapDispathToProps(dispatch) {\n  return bindActionCreators({\n    userLogin,\n    resetUserAuth\n  }, dispatch);\n}\n\nexport default connect(mapStateToProps, mapDispathToProps)(Forgotpassword);","map":{"version":3,"sources":["D:/Gamegram/ecommerce-master/pages/forgot-password.js"],"names":["React","Component","Link","notification","Form","Col","connect","bindActionCreators","Formik","Yup","Navbar","Footer","Breadcrumb","userLogin","resetUserAuth","ForgotpasswordSchema","object","shape","email","string","required","Forgotpassword","constructor","props","values","state","getDerivedStateFromProps","nextProps","auth","messageId","message","description","alertMessage","render","console","log","onFinish","handleSubmit","handleChange","touched","errors","mapStateToProps","mapDispathToProps","dispatch"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport Link from 'next/link';\r\nimport {notification} from \"antd\";\r\nimport { Form, Col } from 'react-bootstrap';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { Formik } from 'formik';\r\nimport * as Yup from 'yup';\r\n\r\nimport Navbar from '../components/Layout/Navbar';\r\nimport Footer from '../components/Layout/Footer';\r\nimport Breadcrumb from '../components/Common/Breadcrumb';\r\n\r\nimport {\r\n    userLogin,\r\n    resetUserAuth\r\n} from \"./../redux/actions/auth\";\r\n\r\nconst ForgotpasswordSchema = Yup.object().shape({\r\n    email: Yup.string().required('Enter your email or mobile phone number.'),\r\n    \r\n});\r\n\r\nclass Forgotpassword extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n\r\n        this.state = {\r\n        }\r\n    }\r\n\r\n    onFinish = values => {\r\n        this.props.userLogin(values);\r\n    };\r\n\r\n    static getDerivedStateFromProps(nextProps, state){\r\n        if(nextProps.auth){\r\n          if(nextProps.auth.messageId === 200){\r\n            notification['success']({\r\n              message: 'Success',\r\n              description: nextProps.auth.alertMessage\r\n            });\r\n            nextProps.resetUserAuth();\r\n          } else if(nextProps.auth.messageId === 203){\r\n            notification['error']({\r\n              message: 'There was a problem!',\r\n              description: nextProps.auth.alertMessage\r\n            });\r\n            nextProps.resetUserAuth();\r\n          }\r\n          return true;\r\n        }\r\n        return null;\r\n    }\r\n\r\n    render() {\r\n        console.log(\"Forgotpassword\", this.props);\r\n        return (\r\n            <>\r\n                <Navbar />\r\n\r\n                <Breadcrumb title=\"Forgotpassword\" />\r\n                <section className=\"signup-area ptb-60\">\r\n                <div className=\"container\">\r\n                    <div className=\"signup-content\">\r\n                        <div className=\"section-title\">\r\n                            <h2><span className=\"dot\"></span> Forgotpassword</h2>\r\n                        </div>\r\n                \r\n\r\n                                    <Formik\r\n                                        validationSchema={ForgotpasswordSchema}\r\n                                        onSubmit={values => {\r\n                                            this.onFinish(values);\r\n                                        }}\r\n                                        enableReinitialize={true}\r\n                                        initialValues={{\r\n                                            email: ''\r\n                                            \r\n                                        }}>\r\n                                        {({\r\n                                            handleSubmit,\r\n                                            handleChange,\r\n                                            values,\r\n                                            touched,\r\n                                            errors,\r\n                                        }) => (\r\n                                            <Form noValidate onSubmit={handleSubmit} className=\"login-form\">\r\n                                                <Form.Row>\r\n                                                    <Col>\r\n                                                        <Form.Label>Email or Mobile phone number</Form.Label>\r\n                                                        <Form.Control\r\n                                                            type=\"text\"\r\n                                                            required\r\n                                                            name=\"email\"\r\n                                                            value={values.email}\r\n                                                            onChange={handleChange}\r\n                                                            isInvalid={!!errors.email}\r\n                                                        />\r\n                                                        {errors.email && touched.email ? (\r\n                                                            <Form.Control.Feedback type=\"invalid\">{errors.email}</Form.Control.Feedback>\r\n                                                        ) : null}\r\n                                                    <br></br>\r\n                                 <button type=\"submit\" className=\"btn btn-primary\">Forgotpassword</button>\r\n                                 <br></br>\r\n                                       <Link href=\"/ change-password\">\r\n                                       <a className=\"reset-paasword\">Reset password</a>\r\n                                       </Link>\r\n                                </Col>\r\n                             </Form.Row>\r\n                         </Form>\r\n                             )}\r\n                     </Formik>\r\n           </div>\r\n             </div>\r\n                </section>\r\n\r\n                <Footer />\r\n            </>\r\n        );\r\n    }\r\n}\r\n\r\nfunction mapStateToProps(state) {\r\n    return {\r\n        auth: state.auth\r\n    }\r\n}\r\n\r\nfunction mapDispathToProps(dispatch) {\r\n    return bindActionCreators({ userLogin, resetUserAuth }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispathToProps)(Forgotpassword);\r\n"]},"metadata":{},"sourceType":"module"}